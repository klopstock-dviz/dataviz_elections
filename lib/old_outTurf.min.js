!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turf=e()}}((function(){return function e(t,r,n){function o(a,u){if(!r[a]){if(!t[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(i)return i(a,!0);var f=new Error("Cannot find module '"+a+"'");throw f.code="MODULE_NOT_FOUND",f}var c=r[a]={exports:{}};t[a][0].call(c.exports,(function(e){return o(t[a][1][e]||e)}),c,c.exports,e,t,r,n)}return r[a].exports}for(var i="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(e,t,r){t.exports={helpers:e("@turf/helpers"),transformScale:e("@turf/transform-scale"),area:e("@turf/area"),midpoint:e("@turf/midpoint")}},{"@turf/area":2,"@turf/helpers":10,"@turf/midpoint":13,"@turf/transform-scale":17}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/meta"),o=6378137;function i(e){var t=0;if(e&&e.length>0){t+=Math.abs(a(e[0]));for(var r=1;r<e.length;r++)t-=Math.abs(a(e[r]))}return t}function a(e){var t,r,n,i,a,s,f=0,c=e.length;if(c>2){for(s=0;s<c;s++)s===c-2?(n=c-2,i=c-1,a=0):s===c-1?(n=c-1,i=0,a=1):(n=s,i=s+1,a=s+2),t=e[n],r=e[i],f+=(u(e[a][0])-u(t[0]))*Math.sin(u(r[1]));f=f*o*o/2}return f}function u(e){return e*Math.PI/180}r.default=function(e){return n.geomReduce(e,(function(e,t){return e+function(e){var t,r=0;switch(e.type){case"Polygon":return i(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)r+=i(e.coordinates[t]);return r;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(t)}),0)}},{"@turf/meta":12}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/meta");function o(e){var t=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}o.default=o,r.default=o},{"@turf/meta":12}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers"),o=e("@turf/invariant");function i(e,t,r){if(void 0===r&&(r={}),!0===r.final)return function(e,t){var r=i(t,e);return r=(r+180)%360}(e,t);var a=o.getCoord(e),u=o.getCoord(t),s=n.degreesToRadians(a[0]),f=n.degreesToRadians(u[0]),c=n.degreesToRadians(a[1]),l=n.degreesToRadians(u[1]),d=Math.sin(f-s)*Math.cos(l),h=Math.cos(c)*Math.sin(l)-Math.sin(c)*Math.cos(l)*Math.cos(f-s);return n.radiansToDegrees(Math.atan2(d,h))}r.default=i},{"@turf/helpers":10,"@turf/invariant":11}],5:[function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0});var o=n(e("@turf/bbox")),i=e("@turf/helpers");r.default=function(e,t){void 0===t&&(t={});var r=o.default(e),n=(r[0]+r[2])/2,a=(r[1]+r[3])/2;return i.point([n,a],t.properties,t)}},{"@turf/bbox":3,"@turf/helpers":10}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/meta"),o=e("@turf/helpers");r.default=function(e,t){void 0===t&&(t={});var r=0,i=0,a=0;return n.coordEach(e,(function(e){r+=e[0],i+=e[1],a++}),!0),o.point([r/a,i/a],t.properties)}},{"@turf/helpers":10,"@turf/meta":12}],7:[function(e,t,r){"use strict";function n(e){var t={type:"Feature"};return Object.keys(e).forEach((function(r){switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=o(e.properties),t.geometry=i(e.geometry),t}function o(e){var t={};return e?(Object.keys(e).forEach((function(r){var n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((function(e){return e})):t[r]=o(n):t[r]=n})),t):t}function i(e){var t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((function(e){return i(e)})),t):(t.coordinates=a(e.coordinates),t)}function a(e){var t=e;return"object"!=typeof t[0]?t.slice():t.map((function(e){return a(e)}))}Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return n(e);case"FeatureCollection":return function(e){var t={type:"FeatureCollection"};return Object.keys(e).forEach((function(r){switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((function(e){return n(e)})),t}(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return i(e);default:throw new Error("unknown GeoJSON type")}}},{}],8:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers"),o=e("@turf/invariant");r.default=function(e,t,r,i){void 0===i&&(i={});var a=o.getCoord(e),u=n.degreesToRadians(a[0]),s=n.degreesToRadians(a[1]),f=n.degreesToRadians(r),c=n.lengthToRadians(t,i.units),l=Math.asin(Math.sin(s)*Math.cos(c)+Math.cos(s)*Math.sin(c)*Math.cos(f)),d=u+Math.atan2(Math.sin(f)*Math.sin(c)*Math.cos(s),Math.cos(c)-Math.sin(s)*Math.sin(l)),h=n.radiansToDegrees(d),g=n.radiansToDegrees(l);return n.point([h,g],i.properties)}},{"@turf/helpers":10,"@turf/invariant":11}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/invariant"),o=e("@turf/helpers");r.default=function(e,t,r){void 0===r&&(r={});var i=n.getCoord(e),a=n.getCoord(t),u=o.degreesToRadians(a[1]-i[1]),s=o.degreesToRadians(a[0]-i[0]),f=o.degreesToRadians(i[1]),c=o.degreesToRadians(a[1]),l=Math.pow(Math.sin(u/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(f)*Math.cos(c);return o.radiansToLength(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),r.units)}},{"@turf/helpers":10,"@turf/invariant":11}],10:[function(e,t,r){"use strict";function n(e,t,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!g(e[0])||!g(e[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:e},t,r)}function i(e,t,r){void 0===r&&(r={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},t,r)}function u(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function s(e,t,r){return void 0===r&&(r={}),n({type:"MultiLineString",coordinates:e},t,r)}function f(e,t,r){return void 0===r&&(r={}),n({type:"MultiPoint",coordinates:e},t,r)}function c(e,t,r){return void 0===r&&(r={}),n({type:"MultiPolygon",coordinates:e},t,r)}function l(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function d(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function h(e){return 180*(e%(2*Math.PI))/Math.PI}function g(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=n,r.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return f(t).geometry;case"MultiLineString":return s(t).geometry;case"MultiPolygon":return c(t).geometry;default:throw new Error(e+" is invalid")}},r.point=o,r.points=function(e,t,r){return void 0===r&&(r={}),u(e.map((function(e){return o(e,t)})),r)},r.polygon=i,r.polygons=function(e,t,r){return void 0===r&&(r={}),u(e.map((function(e){return i(e,t)})),r)},r.lineString=a,r.lineStrings=function(e,t,r){return void 0===r&&(r={}),u(e.map((function(e){return a(e,t)})),r)},r.featureCollection=u,r.multiLineString=s,r.multiPoint=f,r.multiPolygon=c,r.geometryCollection=function(e,t,r){return void 0===r&&(r={}),n({type:"GeometryCollection",geometries:e},t,r)},r.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},r.radiansToLength=l,r.lengthToRadians=d,r.lengthToDegrees=function(e,t){return h(d(e,t))},r.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},r.radiansToDegrees=h,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return l(d(e,t),r)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=r.areaFactors[t];if(!o)throw new Error("invalid original units");var i=r.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},r.isNumber=g,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!g(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(t){if(t.length>1&&n.isNumber(t[0])&&n.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},r.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},r.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},{"@turf/helpers":10}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");function o(e,t,r){if(null!==e)for(var n,i,a,u,s,f,c,l,d=0,h=0,g=e.type,p="FeatureCollection"===g,y="Feature"===g,v=p?e.features.length:1,m=0;m<v;m++){s=(l=!!(c=p?e.features[m].geometry:y?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var b=0;b<s;b++){var w=0,M=0;if(null!==(u=l?c.geometries[b]:c)){f=u.coordinates;var P=u.type;switch(d=!r||"Polygon"!==P&&"MultiPolygon"!==P?0:1,P){case null:break;case"Point":if(!1===t(f,h,m,w,M))return!1;h++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<f.length;n++){if(!1===t(f[n],h,m,w,M))return!1;h++,"MultiPoint"===P&&w++}"LineString"===P&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<f.length;n++){for(i=0;i<f[n].length-d;i++){if(!1===t(f[n][i],h,m,w,M))return!1;h++}"MultiLineString"===P&&w++,"Polygon"===P&&M++}"Polygon"===P&&w++;break;case"MultiPolygon":for(n=0;n<f.length;n++){for(M=0,i=0;i<f[n].length;i++){for(a=0;a<f[n][i].length-d;a++){if(!1===t(f[n][i][a],h,m,w,M))return!1;h++}M++}w++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===o(u.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function u(e,t){var r,n,o,i,a,u,s,f,c,l,d=0,h="FeatureCollection"===e.type,g="Feature"===e.type,p=h?e.features.length:1;for(r=0;r<p;r++){for(u=h?e.features[r].geometry:g?e.geometry:e,f=h?e.features[r].properties:g?e.properties:{},c=h?e.features[r].bbox:g?e.bbox:void 0,l=h?e.features[r].id:g?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=s?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,d,f,c,l))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],d,f,c,l))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,d,f,c,l))return!1;d++}}function s(e,t){u(e,(function(e,r,o,i,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var f=0;f<e.coordinates.length;f++){var c={type:u,coordinates:e.coordinates[f]};if(!1===t(n.feature(c,o),r,f))return!1}}))}function f(e,t){s(e,(function(e,r,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,f=0,c=0,l=0;return!1!==o(e,(function(o,u,d,h,g){if(void 0===s||r>f||h>c||g>l)return s=o,f=r,c=h,l=g,void(a=0);var p=n.lineString([s,o],e.properties);if(!1===t(p,r,i,g,a))return!1;a++,s=o}))&&void 0}}}))}function c(e,t){if(!e)throw new Error("geojson is required");s(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===t(n.lineString(a[u],e.properties),r,o,u))return!1}}}))}r.coordAll=function(e){var t=[];return o(e,(function(e){t.push(e)})),t},r.coordEach=o,r.coordReduce=function(e,t,r,n){var i=r;return o(e,(function(e,n,o,a,u){i=0===n&&void 0===r?e:t(i,e,n,o,a,u)}),n),i},r.featureEach=a,r.featureReduce=function(e,t,r){var n=r;return a(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},r.findPoint=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var f=r.coordinates;switch(r.type){case"Point":return n.point(f,s,t);case"MultiPoint":return i<0&&(i=f.length+i),n.point(f[i],s,t);case"LineString":return u<0&&(u=f.length+u),n.point(f[u],s,t);case"Polygon":return a<0&&(a=f.length+a),u<0&&(u=f[a].length+u),n.point(f[a][u],s,t);case"MultiLineString":return i<0&&(i=f.length+i),u<0&&(u=f[i].length+u),n.point(f[i][u],s,t);case"MultiPolygon":return i<0&&(i=f.length+i),a<0&&(a=f[i].length+a),u<0&&(u=f[i][a].length-u),n.point(f[i][a][u],s,t)}throw new Error("geojson is invalid")},r.findSegment=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var f=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=f.length+u-1),n.lineString([f[u],f[u+1]],s,t);case"Polygon":return a<0&&(a=f.length+a),u<0&&(u=f[a].length+u-1),n.lineString([f[a][u],f[a][u+1]],s,t);case"MultiLineString":return i<0&&(i=f.length+i),u<0&&(u=f[i].length+u-1),n.lineString([f[i][u],f[i][u+1]],s,t);case"MultiPolygon":return i<0&&(i=f.length+i),a<0&&(a=f[i].length+a),u<0&&(u=f[i][a].length-u-1),n.lineString([f[i][a][u],f[i][a][u+1]],s,t)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,t,r){var n=r;return s(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n},r.geomEach=u,r.geomReduce=function(e,t,r){var n=r;return u(e,(function(e,o,i,a,u){n=0===o&&void 0===r?e:t(n,e,o,i,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,t,r){var n=r;return c(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n},r.propEach=i,r.propReduce=function(e,t,r){var n=r;return i(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},r.segmentEach=f,r.segmentReduce=function(e,t,r){var n=r,o=!1;return f(e,(function(e,i,a,u,s){n=!1===o&&void 0===r?e:t(n,e,i,a,u,s),o=!0})),n}},{"@turf/helpers":10}],13:[function(e,t,r){"use strict";var n=e("@turf/bearing"),o=e("@turf/destination"),i=e("@turf/distance");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(n),s=a(o),f=a(i);function c(e,t){var r=f.default(e,t),n=u.default(e,t);return s.default(e,r/2,n)}t.exports=c,t.exports.default=c},{"@turf/bearing":4,"@turf/destination":8,"@turf/distance":9}],14:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers"),o=e("@turf/invariant");function i(e,t){var r=n.degreesToRadians(e[1]),o=n.degreesToRadians(t[1]),i=n.degreesToRadians(t[0]-e[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var a=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),u=Math.atan2(i,a);return(n.radiansToDegrees(u)+360)%360}r.default=function(e,t,r){var n;return void 0===r&&(r={}),(n=r.final?i(o.getCoord(t),o.getCoord(e)):i(o.getCoord(e),o.getCoord(t)))>180?-(360-n):n}},{"@turf/helpers":10,"@turf/invariant":11}],15:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers"),o=e("@turf/invariant");r.default=function(e,t,r,i){void 0===i&&(i={});var a=t<0,u=n.convertLength(Math.abs(t),i.units,"meters");a&&(u=-Math.abs(u));var s=o.getCoord(e),f=function(e,t,r,o){o=void 0===o?n.earthRadius:Number(o);var i=t/o,a=e[0]*Math.PI/180,u=n.degreesToRadians(e[1]),s=n.degreesToRadians(r),f=i*Math.cos(s),c=u+f;Math.abs(c)>Math.PI/2&&(c=c>0?Math.PI-c:-Math.PI-c);var l=Math.log(Math.tan(c/2+Math.PI/4)/Math.tan(u/2+Math.PI/4)),d=Math.abs(l)>1e-11?f/l:Math.cos(u),h=i*Math.sin(s)/d;return[(180*(a+h)/Math.PI+540)%360-180,180*c/Math.PI]}(s,u,r);return f[0]+=f[0]-s[0]>180?-360:s[0]-f[0]>180?360:0,n.point(f,i.properties)}},{"@turf/helpers":10,"@turf/invariant":11}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers"),o=e("@turf/invariant");r.default=function(e,t,r){void 0===r&&(r={});var i=o.getCoord(e),a=o.getCoord(t);a[0]+=a[0]-i[0]>180?-360:i[0]-a[0]>180?360:0;var u=function(e,t,r){var o=r=void 0===r?n.earthRadius:Number(r),i=e[1]*Math.PI/180,a=t[1]*Math.PI/180,u=a-i,s=Math.abs(t[0]-e[0])*Math.PI/180;s>Math.PI&&(s-=2*Math.PI);var f=Math.log(Math.tan(a/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),c=Math.abs(f)>1e-11?u/f:Math.cos(i);return Math.sqrt(u*u+c*c*s*s)*o}(i,a);return n.convertLength(u,"meters",r.units)}},{"@turf/helpers":10,"@turf/invariant":11}],17:[function(e,t,r){"use strict";var n=e("@turf/clone"),o=e("@turf/center"),i=e("@turf/centroid"),a=e("@turf/bbox"),u=e("@turf/rhumb-bearing"),s=e("@turf/rhumb-distance"),f=e("@turf/rhumb-destination"),c=e("@turf/meta"),l=e("@turf/helpers"),d=e("@turf/invariant");function h(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var g=h(n),p=h(o),y=h(i),v=h(a),m=h(u),b=h(s),w=h(f);function M(e,t,r){if(r=r||{},!l.isObject(r))throw new Error("options is invalid");var n=r.origin,o=r.mutate;if(!e)throw new Error("geojson required");if("number"!=typeof t||0===t)throw new Error("invalid factor");var i=Array.isArray(n)||"object"==typeof n;return!0!==o&&(e=g.default(e)),"FeatureCollection"!==e.type||i?P(e,t,n):(c.featureEach(e,(function(r,o){e.features[o]=P(r,t,n)})),e)}function P(e,t,r){var n="Point"===d.getType(e);return r=function(e,t){null==t&&(t="centroid");if(Array.isArray(t)||"object"==typeof t)return d.getCoord(t);var r=e.bbox?e.bbox:v.default(e),n=r[0],o=r[1],i=r[2],a=r[3];switch(t){case"sw":case"southwest":case"westsouth":case"bottomleft":return l.point([n,o]);case"se":case"southeast":case"eastsouth":case"bottomright":return l.point([i,o]);case"nw":case"northwest":case"westnorth":case"topleft":return l.point([n,a]);case"ne":case"northeast":case"eastnorth":case"topright":return l.point([i,a]);case"center":return p.default(e);case void 0:case null:case"centroid":return y.default(e);default:throw new Error("invalid origin")}}(e,r),1===t||n||c.coordEach(e,(function(e){var n=b.default(r,e),o=m.default(r,e),i=n*t,a=d.getCoords(w.default(r,i,o));e[0]=a[0],e[1]=a[1],3===e.length&&(e[2]*=t)})),e}t.exports=M,t.exports.default=M},{"@turf/bbox":3,"@turf/center":5,"@turf/centroid":6,"@turf/clone":7,"@turf/helpers":10,"@turf/invariant":11,"@turf/meta":12,"@turf/rhumb-bearing":14,"@turf/rhumb-destination":15,"@turf/rhumb-distance":16}]},{},[1])(1)}));